{"ast":null,"code":"var _jsxFileName = \"E:\\\\Resturant\\\\client\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../styles/Auth.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const base = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\n    fetch(`${base}/api/customers/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(async res => {\n      if (!res.ok) {\n        const txt = await res.text();\n        throw new Error(txt || 'Login failed');\n      }\n      return res.json();\n    }).then(() => {\n      navigate('/dashboard');\n    }).catch(err => {\n      console.error(err);\n      alert('Login failed: ' + (err.message || err));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-link\",\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 59\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","base","process","env","REACT_APP_API_BASE","fetch","method","headers","credentials","body","JSON","stringify","then","res","ok","txt","text","Error","json","catch","err","console","error","alert","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["E:/Resturant/client/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../styles/Auth.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const base = process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n    fetch(`${base}/api/customers/login`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      credentials: 'include',\r\n      body: JSON.stringify({ email, password })\r\n    }).then(async res => {\r\n      if (!res.ok) {\r\n        const txt = await res.text();\r\n        throw new Error(txt || 'Login failed');\r\n      }\r\n      return res.json();\r\n    }).then(() => {\r\n      navigate('/dashboard');\r\n    }).catch(err => {\r\n      console.error(err);\r\n      alert('Login failed: ' + (err.message || err));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\r\n        <h2>Login</h2>\r\n        <input type=\"email\" placeholder=\"Email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n        <button className=\"btn-primary\" type=\"submit\">Login</button>\r\n        <div className=\"auth-link\">Don't have an account? <Link to=\"/signup\">Sign up</Link></div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}