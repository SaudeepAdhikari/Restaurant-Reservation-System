{"ast":null,"code":"var _jsxFileName = \"E:\\\\Resturant\\\\client\\\\src\\\\components\\\\common\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    checking,\n    user\n  } = useAuth();\n  if (checking) return null; // or a spinner\n  return user ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 28\n  }, this);\n}\n_s(ProtectedRoute, \"poY91q0xY2LgDW3h4h72vdkNV2E=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","checking","user","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Resturant/client/src/components/common/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../utils/auth';\r\n\r\nfunction ProtectedRoute({ children }) {\r\n  const { checking, user } = useAuth();\r\n  if (checking) return null; // or a spinner\r\n  return user ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EACpC,IAAIM,QAAQ,EAAE,OAAO,IAAI,CAAC,CAAC;EAC3B,OAAOC,IAAI,GAAGH,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACS,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD;AAACP,EAAA,CAJQF,cAAc;EAAA,QACMH,OAAO;AAAA;AAAAa,EAAA,GAD3BV,cAAc;AAMvB,eAAeA,cAAc;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}