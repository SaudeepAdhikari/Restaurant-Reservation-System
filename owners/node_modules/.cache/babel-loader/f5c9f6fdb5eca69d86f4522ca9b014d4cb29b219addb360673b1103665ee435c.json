{"ast":null,"code":"var _jsxFileName = \"E:\\\\Resturant\\\\owners\\\\src\\\\pages\\\\TablesList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { authFetch } from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TablesList() {\n  _s();\n  // optional restaurantId could be passed via query in a real app; here we list all owner tables\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    // for simplicity, there's no global endpoint for all tables; owners should navigate per-restaurant\n    // but we can fetch via admin/listing of restaurants then tables per restaurant in a fuller flow\n    authFetch('/api/owner/restaurants').then(rests => {\n      Promise.all(rests.map(r => authFetch(`/api/owner/tables/restaurant/${r._id}`))).then(arr => {\n        setList(arr.flat());\n      }).catch(console.error);\n    }).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tables-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Tables\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/tables/new\",\n      className: \"btn-primary\",\n      children: \"Create Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tables-grid\",\n      children: list.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"muted small\",\n            children: [\"Capacity: \", t.capacity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"small-btn\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"small-btn danger-btn\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, t._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(TablesList, \"ZBNfaudzy8bVxb8UgkyyMnLdlWY=\");\n_c = TablesList;\nexport default TablesList;\nvar _c;\n$RefreshReg$(_c, \"TablesList\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","authFetch","jsxDEV","_jsxDEV","TablesList","_s","list","setList","then","rests","Promise","all","map","r","_id","arr","flat","catch","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","t","name","capacity","_c","$RefreshReg$"],"sources":["E:/Resturant/owners/src/pages/TablesList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { authFetch } from '../utils/auth';\r\n\r\nfunction TablesList() {\r\n  // optional restaurantId could be passed via query in a real app; here we list all owner tables\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // for simplicity, there's no global endpoint for all tables; owners should navigate per-restaurant\r\n    // but we can fetch via admin/listing of restaurants then tables per restaurant in a fuller flow\r\n    authFetch('/api/owner/restaurants').then(rests => {\r\n      Promise.all(rests.map(r => authFetch(`/api/owner/tables/restaurant/${r._id}`))).then(arr => {\r\n        setList(arr.flat());\r\n      }).catch(console.error);\r\n    }).catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"tables-page\">\r\n      <h2>Your Tables</h2>\r\n      <Link to=\"/tables/new\" className=\"btn-primary\">Create Table</Link>\r\n      <div className=\"tables-grid\">\r\n        {list.map(t => (\r\n          <div key={t._id} className=\"table-card\">\r\n            <div>\r\n              <strong>{t.name}</strong>\r\n              <div className=\"muted small\">Capacity: {t.capacity}</div>\r\n            </div>\r\n            <div className=\"card-actions\">\r\n              <button className=\"small-btn\">Edit</button>\r\n              <button className=\"small-btn danger-btn\">Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TablesList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}