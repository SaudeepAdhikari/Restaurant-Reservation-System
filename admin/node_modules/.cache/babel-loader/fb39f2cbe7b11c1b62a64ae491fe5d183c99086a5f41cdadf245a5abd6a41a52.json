{"ast":null,"code":"import _objectSpread from\"E:/Resturant/admin/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE=process.env.REACT_APP_API_URL||process.env.REACT_APP_API_BASE||'http://localhost:5000';export function getToken(){return localStorage.getItem('admin_token');}export function saveToken(token){localStorage.setItem('admin_token',token);}export function removeToken(){localStorage.removeItem('admin_token');}export async function apiPost(path,body){const url=path.startsWith('http')?path:\"\".concat(API_BASE).concat(path);const res=await fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)});if(!res.ok){const err=await res.json().catch(()=>({message:'Network error'}));throw new Error(err.message||'Request failed');}return res.json();}export async function authFetch(path){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=getToken();const url=path.startsWith('http')?path:\"\".concat(API_BASE).concat(path);const res=await fetch(url,_objectSpread(_objectSpread({},options),{},{headers:_objectSpread(_objectSpread({'Content-Type':'application/json'},options.headers||{}),{},{Authorization:token?\"Bearer \".concat(token):undefined})}));const contentType=(res.headers.get('content-type')||'').toLowerCase();const isJson=contentType.includes('application/json');// handle errors\nif(!res.ok){// auto-logout on auth errors\nif(res.status===401||res.status===403){try{removeToken();window.dispatchEvent(new Event('app:logout'));}catch(e){}}if(isJson){const body=await res.json().catch(()=>({}));const msg=body&&(body.message||body.error)?body.message||body.error:JSON.stringify(body);throw new Error(msg||res.statusText||'Request failed');}// non-JSON error (HTML page, etc.)\nconst txt=await res.text().catch(()=>res.statusText);throw new Error(txt||res.statusText||'Request failed');}// success but not JSON (likely an HTML response) — surface as error to avoid JSON parse crash\nif(!isJson){const txt=await res.text().catch(()=>'Received non-JSON response');throw new Error(txt||'Received non-JSON response');}return res.json();}","map":{"version":3,"names":["API_BASE","process","env","REACT_APP_API_URL","REACT_APP_API_BASE","getToken","localStorage","getItem","saveToken","token","setItem","removeToken","removeItem","apiPost","path","body","url","startsWith","concat","res","fetch","method","headers","JSON","stringify","ok","err","json","catch","message","Error","authFetch","options","arguments","length","undefined","_objectSpread","Authorization","contentType","get","toLowerCase","isJson","includes","status","window","dispatchEvent","Event","e","msg","error","statusText","txt","text"],"sources":["E:/Resturant/admin/src/utils/auth.js"],"sourcesContent":["const API_BASE = process.env.REACT_APP_API_URL || process.env.REACT_APP_API_BASE || 'http://localhost:5000';\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem('admin_token');\r\n}\r\nexport function saveToken(token) {\r\n  localStorage.setItem('admin_token', token);\r\n}\r\nexport function removeToken() {\r\n  localStorage.removeItem('admin_token');\r\n}\r\n\r\nexport async function apiPost(path, body) {\r\n  const url = path.startsWith('http') ? path : `${API_BASE}${path}`;\r\n  const res = await fetch(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(body)\r\n  });\r\n  if (!res.ok) {\r\n    const err = await res.json().catch(()=>({message: 'Network error'}));\r\n    throw new Error(err.message || 'Request failed');\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport async function authFetch(path, options = {}) {\r\n  const token = getToken();\r\n  const url = path.startsWith('http') ? path : `${API_BASE}${path}`;\r\n  const res = await fetch(url, {\r\n    ...options,\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      ...(options.headers || {}),\r\n      Authorization: token ? `Bearer ${token}` : undefined\r\n    }\r\n  });\r\n\r\n  const contentType = (res.headers.get('content-type') || '').toLowerCase();\r\n  const isJson = contentType.includes('application/json');\r\n\r\n  // handle errors\r\n  if (!res.ok) {\r\n    // auto-logout on auth errors\r\n    if (res.status === 401 || res.status === 403) {\r\n      try { removeToken(); window.dispatchEvent(new Event('app:logout')); } catch(e){}\r\n    }\r\n\r\n    if (isJson) {\r\n      const body = await res.json().catch(() => ({}));\r\n      const msg = body && (body.message || body.error) ? (body.message || body.error) : JSON.stringify(body);\r\n      throw new Error(msg || res.statusText || 'Request failed');\r\n    }\r\n\r\n    // non-JSON error (HTML page, etc.)\r\n    const txt = await res.text().catch(() => res.statusText);\r\n    throw new Error(txt || res.statusText || 'Request failed');\r\n  }\r\n\r\n  // success but not JSON (likely an HTML response) — surface as error to avoid JSON parse crash\r\n  if (!isJson) {\r\n    const txt = await res.text().catch(() => 'Received non-JSON response');\r\n    throw new Error(txt || 'Received non-JSON response');\r\n  }\r\n\r\n  return res.json();\r\n}\r\n"],"mappings":"uGAAA,KAAM,CAAAA,QAAQ,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAIF,OAAO,CAACC,GAAG,CAACE,kBAAkB,EAAI,uBAAuB,CAE3G,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACzB,MAAO,CAAAC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CAC5C,CACA,MAAO,SAAS,CAAAC,SAASA,CAACC,KAAK,CAAE,CAC/BH,YAAY,CAACI,OAAO,CAAC,aAAa,CAAED,KAAK,CAAC,CAC5C,CACA,MAAO,SAAS,CAAAE,WAAWA,CAAA,CAAG,CAC5BL,YAAY,CAACM,UAAU,CAAC,aAAa,CAAC,CACxC,CAEA,MAAO,eAAe,CAAAC,OAAOA,CAACC,IAAI,CAAEC,IAAI,CAAE,CACxC,KAAM,CAAAC,GAAG,CAAGF,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,CAAGH,IAAI,IAAAI,MAAA,CAAMlB,QAAQ,EAAAkB,MAAA,CAAGJ,IAAI,CAAE,CACjE,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACJ,GAAG,CAAE,CAC3BK,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CP,IAAI,CAAEQ,IAAI,CAACC,SAAS,CAACT,IAAI,CAC3B,CAAC,CAAC,CACF,GAAI,CAACI,GAAG,CAACM,EAAE,CAAE,CACX,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAP,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAK,CAACC,OAAO,CAAE,eAAe,CAAC,CAAC,CAAC,CACpE,KAAM,IAAI,CAAAC,KAAK,CAACJ,GAAG,CAACG,OAAO,EAAI,gBAAgB,CAAC,CAClD,CACA,MAAO,CAAAV,GAAG,CAACQ,IAAI,CAAC,CAAC,CACnB,CAEA,MAAO,eAAe,CAAAI,SAASA,CAACjB,IAAI,CAAgB,IAAd,CAAAkB,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAChD,KAAM,CAAAxB,KAAK,CAAGJ,QAAQ,CAAC,CAAC,CACxB,KAAM,CAAAW,GAAG,CAAGF,IAAI,CAACG,UAAU,CAAC,MAAM,CAAC,CAAGH,IAAI,IAAAI,MAAA,CAAMlB,QAAQ,EAAAkB,MAAA,CAAGJ,IAAI,CAAE,CACjE,KAAM,CAAAK,GAAG,CAAG,KAAM,CAAAC,KAAK,CAACJ,GAAG,CAAAoB,aAAA,CAAAA,aAAA,IACtBJ,OAAO,MACVV,OAAO,CAAAc,aAAA,CAAAA,aAAA,EACL,cAAc,CAAE,kBAAkB,EAC9BJ,OAAO,CAACV,OAAO,EAAI,CAAC,CAAC,MACzBe,aAAa,CAAE5B,KAAK,WAAAS,MAAA,CAAaT,KAAK,EAAK0B,SAAS,EACrD,EACF,CAAC,CAEF,KAAM,CAAAG,WAAW,CAAG,CAACnB,GAAG,CAACG,OAAO,CAACiB,GAAG,CAAC,cAAc,CAAC,EAAI,EAAE,EAAEC,WAAW,CAAC,CAAC,CACzE,KAAM,CAAAC,MAAM,CAAGH,WAAW,CAACI,QAAQ,CAAC,kBAAkB,CAAC,CAEvD;AACA,GAAI,CAACvB,GAAG,CAACM,EAAE,CAAE,CACX;AACA,GAAIN,GAAG,CAACwB,MAAM,GAAK,GAAG,EAAIxB,GAAG,CAACwB,MAAM,GAAK,GAAG,CAAE,CAC5C,GAAI,CAAEhC,WAAW,CAAC,CAAC,CAAEiC,MAAM,CAACC,aAAa,CAAC,GAAI,CAAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAE,CAAE,MAAMC,CAAC,CAAC,CAAC,CACjF,CAEA,GAAIN,MAAM,CAAE,CACV,KAAM,CAAA1B,IAAI,CAAG,KAAM,CAAAI,GAAG,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,KAAO,CAAC,CAAC,CAAC,CAAC,CAC/C,KAAM,CAAAoB,GAAG,CAAGjC,IAAI,GAAKA,IAAI,CAACc,OAAO,EAAId,IAAI,CAACkC,KAAK,CAAC,CAAIlC,IAAI,CAACc,OAAO,EAAId,IAAI,CAACkC,KAAK,CAAI1B,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CACtG,KAAM,IAAI,CAAAe,KAAK,CAACkB,GAAG,EAAI7B,GAAG,CAAC+B,UAAU,EAAI,gBAAgB,CAAC,CAC5D,CAEA;AACA,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAhC,GAAG,CAACiC,IAAI,CAAC,CAAC,CAACxB,KAAK,CAAC,IAAMT,GAAG,CAAC+B,UAAU,CAAC,CACxD,KAAM,IAAI,CAAApB,KAAK,CAACqB,GAAG,EAAIhC,GAAG,CAAC+B,UAAU,EAAI,gBAAgB,CAAC,CAC5D,CAEA;AACA,GAAI,CAACT,MAAM,CAAE,CACX,KAAM,CAAAU,GAAG,CAAG,KAAM,CAAAhC,GAAG,CAACiC,IAAI,CAAC,CAAC,CAACxB,KAAK,CAAC,IAAM,4BAA4B,CAAC,CACtE,KAAM,IAAI,CAAAE,KAAK,CAACqB,GAAG,EAAI,4BAA4B,CAAC,CACtD,CAEA,MAAO,CAAAhC,GAAG,CAACQ,IAAI,CAAC,CAAC,CACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}